type Session
  @model
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "owner"
        operations: [create, update, delete, read]
      }
      { allow: public, provider: iam, operations: [read] }
    ]
  )
  @key(name: "ownerIndex", fields: ["owner"], queryField: "listSessionsByOwner")
{
  id: ID!
  owner: String
  title: String!
  active: Boolean!
  theme: AWSJSON!
  proposals: AWSJSON!
  images: AWSJSON!
  email: String
  launcher: AWSJSON!
  invitations: [Invitation!]
  collaborators: [Collaborator!]
}

type Invitation {
  token: String!
  expireOn: String!
  email: String!
}

type Collaborator {
  userId: String!
  email: String!
}

type Entry
  @model
  @auth(
    rules: [
      {allow: owner, ownerField: "owner", operations: [create, update, delete, read]},
      {allow: public, provider: iam, operations: [create]}
    ]
  )
  @key(name: "sessionAndCreatedAtIndex", fields: ["sessionId", "createdAt"], queryField: "entryBySessionAndCreatedAt")
{
  id: ID!
  owner: String!
  sessionId: ID!
  inputs: AWSJSON!
  createdAt: AWSDateTime!
}